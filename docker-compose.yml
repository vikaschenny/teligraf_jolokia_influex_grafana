version: '2.1'

networks:
  monitor-net:
    driver: bridge

volumes:
    grafana_data: {}
    influxdb_data: {}
    prometheus_data: {}

services:

  influxdb:
    image: influxdb:1.7-alpine
    env_file: configuration.env
    ports:
      - '8086:8086'
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    env_file:
      - config
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
      - ./grafana/defaults.ini:/usr/share/grafana/conf/defaults.ini
    entrypoint: /setup.sh
    restart: unless-stopped
    ports:
      - 8080:3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  smtp:
    container_name: smtp
    build: ./smtp
    expose:
      - 25
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  telegraf:
    container_name: telegraf
    image: telegraf:latest
    volumes:
      - /apps/t360/Grafana/grafana/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  remotestorageadapter:
    container_name: remotestorageadapter
    image: gavind/prometheus-remote-storage-adapter:1.0
    expose:
      - 9201
    command: ['-influxdb-url=http://influxdb:8086', '-influxdb.database=prometheus', '-influxdb.retention-policy=autogen']
    depends_on:
      - influxdb
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
      #- '--web.external-url=http://example.com/prometheus/'
      - '--web.route-prefix=/prometheus'
    restart: unless-stopped
    depends_on:
      - remotestorageadapter
      - influxdb
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    command:
      - '--web.route-prefix=/pushgateway'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

